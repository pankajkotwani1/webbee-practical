module.exports = {
  root: true,
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
  },
  ignorePatterns: ['**/*'],
  extends: [
    'eslint:recommended',
    'plugin:unicorn/recommended',
    'plugin:sonarjs/recommended',
    'prettier',
  ],
  globals: {
    module: 'readonly',
    console: 'readonly',
    debugger: 'readonly',
    jest: 'readonly',
    require: 'readonly',
  },
  plugins: ['sonarjs', 'import', 'eslint-comments', 'jest'],
  rules: {
    'no-promise-executor-return': 'error',
    'require-atomic-updates': 'error',
    'array-callback-return': 'error',
    'block-scoped-var': 'error',
    'consistent-this': 'error',
    'default-case-last': 'error',
    'default-param-last': 'error',
    'dot-notation': 'error',
    'jest/no-identical-title': 'error',
    'jest/valid-expect': 'error',
    'no-caller': 'error',
    'no-octal-escape': 'error',
    'no-constructor-return': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': [
      'error',
      {
        ignore: [0],
        ignoreArrayIndexes: true,
      },
    ],
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-param-reassign': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unused-expressions': 'error',
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-void': 'error',
    'prefer-regex-literals': 'error',
    'require-await': 'error',
    'no-label-var': 'error',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': ['error'],
    'line-comment-position': [
      'error',
      {
        position: 'above',
      },
    ],
    'new-cap': 'error',
    'no-array-constructor': 'error',
    'no-bitwise': 'error',
    'no-continue': 'error',
    'no-inline-comments': 'error',
    'no-multi-assign': 'error',
    'no-new-object': 'error',
    'no-plusplus': 'error',
    'no-underscore-dangle': 'error',
    'no-duplicate-imports': 'error',
    'no-useless-constructor': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    radix: 'error',
    'eslint-comments/no-unlimited-disable': 'error',
    'eslint-comments/no-aggregating-enable': 'error',
    'eslint-comments/no-unused-disable': 'error',
    'eslint-comments/no-unused-enable': 'error',
    'import/named': 'off',
    'import/no-useless-path-segments': 'error',
    'import/export': 'error',
    'import/no-extraneous-dependencies': 'error',
    'import/no-mutable-exports': 'error',
    'import/no-unused-modules': 'error',
    'import/first': 'error',
    'import/exports-last': 'error',
    'import/no-duplicates': 'error',
    'import/extensions': [
      'error',
      'never',
      {
        pattern: {
          jpg: 'always',
          jpeg: 'always',
          png: 'always',
          gif: 'always',
          eot: 'always',
          otf: 'always',
          webp: 'always',
          svg: 'always',
          ttf: 'always',
          woff: 'always',
          woff2: 'always',
          mp4: 'always',
          webm: 'always',
          wav: 'always',
          mp3: 'always',
          m4a: 'always',
          aac: 'always',
          oga: 'always',
          json: 'always',
        },
      },
    ],
    'import/no-default-export': 'off',
    'unicorn/filename-case': [
      'error',
      {
        cases: {
          kebabCase: true,
          pascalCase: true,
        },
      },
    ],
    'unicorn/consistent-function-scoping': 'off',
    'handle-callback-error': 'off',
    'jest/no-focused-tests': 'off',
    'jest/no-disabled-tests': 'off',
    'no-catch-shadow': 'off',
    'no-div-regex': 'off',
    'no-extra-bind': 'off',
    'no-undef-init': 'off',
    'no-mixed-requires': 'off',
    'no-new-requires': 'off',
    'no-path-concat': 'off',
    'no-restricted-modules': 'off',
    yoda: 'off',
    'unicorn/prevent-abbreviations': [
      'error',
      {
        replacements: {
          prop: {
            property: false,
          },
          props: {
            properties: false,
          },
          params: {
            parameters: false,
          },
          ref: {
            reference: false,
          },
          env: {
            environment: false,
          },
        },
      },
    ],
    'unicorn/no-null': 'off',
    'no-console': 'off',
    'no-debugger': 'off',
    'no-unreachable': 'off',
    '@typescript-eslint/naming-convention': [
      'error',
      {
        selector: 'variable',
        format: ['strictCamelCase', 'UPPER_CASE', 'StrictPascalCase'],
        leadingUnderscore: 'allow',
      },
      {
        selector: ['function', 'parameter'],
        format: ['strictCamelCase', 'StrictPascalCase'],
        leadingUnderscore: 'allow',
      },
      {
        selector: 'memberLike',
        modifiers: ['private'],
        format: ['strictCamelCase'],
      },
      {
        selector: ['class', 'enum', 'typeAlias', 'interface'],
        format: ['StrictPascalCase'],
      },
    ],
    eqeqeq: ['error', 'always'],
    'no-use-before-define': 'error',
    'import/order': [
      'error',
      {
        groups: ['builtin', 'external', 'internal'],
        pathGroups: [
          {
            pattern: 'react',
            group: 'external',
            position: 'before',
          },
        ],
        pathGroupsExcludedImportTypes: ['react'],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
    'one-var': ['error', 'never'],
  },
  overrides: [
    {
      files: ['**/*.ts', '**/*.tsx'],
      extends: ['plugin:@typescript-eslint/recommended'],
      parser: '@typescript-eslint/parser',
      plugins: ['@typescript-eslint', 'rxjs', 'etc'],
      rules: {
        '@typescript-eslint/no-explicit-any': 'error',
        '@typescript-eslint/no-inferrable-types': 'error',
        '@typescript-eslint/no-unused-expressions': 'error',
        '@typescript-eslint/adjacent-overload-signatures': 'error',
        '@typescript-eslint/array-type': 'error',
        '@typescript-eslint/await-thenable': 'error',
        '@typescript-eslint/ban-ts-comment': 'error',
        '@typescript-eslint/consistent-type-assertions': 'error',
        '@typescript-eslint/no-floating-promises': 'error',
        '@typescript-eslint/no-implied-eval': 'error',
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-misused-promises': 'error',
        '@typescript-eslint/no-this-alias': 'error',
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
        '@typescript-eslint/no-unnecessary-condition': 'error',
        '@typescript-eslint/no-unnecessary-type-arguments': 'error',
        '@typescript-eslint/no-unnecessary-type-assertion': 'error',
        '@typescript-eslint/no-unsafe-assignment': 'error',
        '@typescript-eslint/no-unsafe-call': 'error',
        '@typescript-eslint/no-unsafe-member-access': 'error',
        '@typescript-eslint/no-unsafe-return': 'error',
        '@typescript-eslint/no-var-requires': 'error',
        '@typescript-eslint/prefer-as-const': 'error',
        '@typescript-eslint/prefer-nullish-coalescing': 'error',
        '@typescript-eslint/prefer-optional-chain': 'error',
        '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        '@typescript-eslint/restrict-plus-operands': 'error',
        '@typescript-eslint/unified-signatures': 'error',
        'rxjs/no-explicit-generics': 'error',
        'rxjs/no-finnish': 'error',
        'rxjs/no-ignored-error': 'error',
        'rxjs/no-ignored-observable': 'error',
        'rxjs/no-ignored-subscription': 'error',
        'rxjs/no-index': 'error',
        'rxjs/no-internal': 'error',
        'rxjs/no-nested-subscribe': 'error',
        'rxjs/no-unsafe-catch': 'error',
        'rxjs/no-unsafe-first': 'error',
        'rxjs/no-unsafe-switchmap': 'error',
        'etc/no-misused-generics': 'error',
        'etc/no-implicit-any-catch': 'error',
        'etc/no-internal': [
          'error',
          {
            ignored: {
              'node_modules/some-path': 'path',
              '^SomeName$': 'name',
            },
          },
        ],
        'etc/no-deprecated': 'error',
        'etc/no-t': 'error',
        'no-undef': 'off',
        'no-unused-vars': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        'etc/no-commented-out-code': 'off',
      },
    },
    {
      files: ['**/*.test.ts', 'setup-jest.ts'],
      rules: {
        '@typescript-eslint/no-var-requires': 'off',
      },
    },
  ],
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
};
